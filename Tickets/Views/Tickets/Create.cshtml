@model Tickets.Models.Ticket

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(m => m.UserId)
            @Html.HiddenFor(m => m.User)
            <input type="hidden" asp-for="closeDate" />
            <input type="hidden" asp-for="initialDate" />
            <input type="hidden" asp-for="ResType" />


            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <!--<div class="form-group">
        <label asp-for="ResType" class="control-label"></label>
        <select asp-for="ResType"
                class="form-control">-->
            <!--<This would need changed if Resoltion enum is altered>-->
            <!--option>unassigned</option
    <option>inProgress</option>
    <option>solved</option>
    <option>closed</option>-->
            <!--<asp-items="Html.GetEnumSelectList>-->
            <!--<Ticket.resolutionType>()"
        </select>
        <span asp-validation-for="ResType" class="text-danger"></span>
    </div>-->
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
